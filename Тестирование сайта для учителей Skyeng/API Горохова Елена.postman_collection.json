{
	"info": {
		"_postman_id": "",
		"name": "API Горохова Елена",
		"schema": "",
		"_exporter_id": ""
	},
	"item": [
		{
			"name": "Расписания за заданный период + визуализация",
			"item": [
				{
					"name": "Получение расписания за заданный период",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"2023-03-13T00:00:00+03:00\",\r\n    \"till\": \"2023-03-14T23:30:00+03:00\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс с валидными данными в настоящем",
			"item": [
				{
					"name": "Создание лс сегодня c валидными данными",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									" });\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"function getRandomTitle() {\r",
									"  const titles = [\"☺\", \"Test_API-new\", \"К/р - 35.0\", \"コースワーク\", \"&#API#&\", \"Курсовая_работа_по_тестированию_АПИ_35.0\"];\r",
									"  return titles[Math.floor(Math.random() * titles.length)];\r",
									"}\r",
									"var value = getRandomTitle();\r",
									"var key = \"title\";\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"function getRandomDescription() {\r",
									"  const descriptions = [\r",
									"   \"☺\", \r",
									"  \"Test_API-new\", \r",
									"  \"К/р - 35.0\",\r",
									"  \"コースワーク\", \r",
									"  \"&#API#&\", \r",
									"  \"www.skyeng.ru\",\r",
									"  \"*Маркдаун*\",\r",
									"  \"\",\r",
									"  \"1234567890\",\r",
									"  \"Есть такая легенда - о птице, что поёт лишь один раз за всю жизнь, но зато прекраснее всех на свете... Однажды она покидает свое гнездо и летит искать куст терновника и не успокоится, пока не найдёт... Среди колючих ветвей запевает она песню и бросается грудью на самый длинный, самый острый шип. И, возвышаясь над несказанной мукой, так поет, умирая, что этой ликующей песне позавидовали бы и жаворонок, и соловей... Единственная, несравненная песнь, и достаётся она ценою жизни... Но весь мир замер\"];\r",
									"  return descriptions[Math.floor(Math.random() * descriptions.length)];\r",
									"}\r",
									"var value = getRandomDescription();\r",
									"var key = \"description\";\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"{{description}}\",\r\n    \"title\": \"{{title}}\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лc на следующей неделе",
			"item": [
				{
					"name": "Создание лс через неделю",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.setDate(value.getDate() + 7);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание события за неделю до\",\r\n    \"title\": \"Через неделю\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лc в следующем месяце",
			"item": [
				{
					"name": "Создание лс через месяц",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.setDate(value.getDate() + 31);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание события за месяц до\",\r\n    \"title\": \"Через месяц\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс за прошлый день",
			"item": [
				{
					"name": "Создание лс за прошлый день",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.setDate(value.getDate() - 1);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание события за прошлый день\",\r\n    \"title\": \"Прошло вчера уже\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс в прошлом месяце",
			"item": [
				{
					"name": "Создание лс месяц назад",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.setDate(value.getDate() - 31);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание события в прошлом месяце\",\r\n    \"title\": \"Месяц назад\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание двух лс одновременно",
			"item": [
				{
					"name": "Создание события №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId№1\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start№1\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание двух событий одновременно\",\r\n    \"title\": \"Событие №1\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание события №2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание двух событий одновременно\",\r\n    \"title\": \"Событие №2\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания событий",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId№1}},\r\n    \"startAt\": \"{{start№1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события №2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс длительностью 24 ч",
			"item": [
				{
					"name": "Создание события 24 часа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addHours(24)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события длительностью 24 часа\",\r\n    \"title\": \"24 часа\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс длительностью 9 ч. 40 мин.",
			"item": [
				{
					"name": "Создание события 9 ч. 40 мин.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"\r",
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(580)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события длительностью 9 ч. 40 мин.\",\r\n    \"title\": \"9 ч. 40 мин.\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создание лс длительностью 1 мин.",
			"item": [
				{
					"name": "Создание события на 1 минуту",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [\r",
									"      [\"#43B658\", \"#EBFDF2\"], \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события длительностью 1 минуту\",\r\n    \"title\": \"1 минута\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Изменение названия лс",
			"item": [
				{
					"name": "Создание лс с названием №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Изменение названия события\",\r\n    \"title\": \"Название №1\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Редактирование названия лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"Изменение названия события\",\r\n    \"title\": \"Название №2\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{startEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка редактирования",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Id События</th>\r",
									"            <th>Начало</th>\r",
									"            <th>Сек.</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{eventId}}</td>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{durationSeconds}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Изменение описания лс",
			"item": [
				{
					"name": "Создание лс с описанием №1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Это описание сейчас изменится\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Редактирование описания",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"А вот и новое описание\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{startEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка редактирования",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Изменение цвета лс",
			"item": [
				{
					"name": "Создание лс зеленого цвета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Изменение цвета личного события\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Цвет</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.backgroundColor}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Редактирование цвета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getRandomColor() {\r",
									"  const colors = [ \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Изменение цвета личного события\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{startEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка редактирования цвета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Цвет</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.backgroundColor}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Перенос лс назад в течение дня",
			"item": [
				{
					"name": "Создание лс на текущее время",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"key = \"oldStartEvent\"\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Перенос назад в течение дня\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Перенос лс назад (на 2 часа)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.addHours(-2);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"Перенос назад в течение дня\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{oldStartEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка переноса лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Перенос лс вперед в течение дня",
			"item": [
				{
					"name": "Создание лс на текущее время",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"key = \"oldStartEvent\"\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Перенос вперед в течение дня\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Перенос события вперед (на 4 часа)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.addHours(+4);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"Перенос вперед в течение дня\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{oldStartEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка переноса лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Перенос лс в будущее (на 4 дня)",
			"item": [
				{
					"name": "Создание лс на текущее время",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"key = \"oldStartEvent\"\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Перенос вперед в будущее\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Перенос события вперед (на 4 дня)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.addDays(+4);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"Перенос вперед в будущее\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{oldStartEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка переноса лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Перенос лс в прошлое (на 3 дня)",
			"item": [
				{
					"name": "Создание лс на текущее время",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"key = \"oldStartEvent\"\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Перенос назад в прошлое\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Перенос события назад (на 3 дня)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.addDays(-3);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"#EBFDF2\",\r\n    \"color\": \"#43B658\",\r\n    \"description\": \"Перенос назад в прошлое\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{oldStartEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка переноса лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Тип</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{type}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Изменение всех параметров лс",
			"item": [
				{
					"name": "Создание лс на текущее время",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date()\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"key = \"oldStartEvent\"\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(30)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\":\"#EBFDF2\",\r\n    \"color\":\"#43B658\",\r\n    \"description\": \"Изменение всех параметров события\",\r\n    \"title\": \"Курсовая работа qa-35\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"createPersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка создания события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Цвет</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{payload.payload.backgroundColor}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.id}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение всех параметров лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var key = \"eventId\"\r",
									"var value = pm.response.json().data.payload.id\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"var key = \"start\"\r",
									"var value = pm.response.json().data.startAt\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"key = \"startEvent\"\r",
									"value = new Date();\r",
									"value.addDays(+7);\r",
									"value.addHours(-5);\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"key = \"end\"\r",
									"value = value.addMinutes(60)\r",
									"pm.collectionVariables.set(key, format(value))\r",
									"\r",
									"function getRandomColor() {\r",
									"  const colors = [ \r",
									"      [\"#D478F1\", \"#F9EBFF\"], \r",
									"      [\"#FAC641\", \"#FFF7C7\"],\r",
									"      [\"#81888D\", \"#F4F5F6\"]\r",
									"  ];\r",
									"  return colors[Math.floor(Math.random() * colors.length)];\r",
									"}\r",
									"var colorPair = getRandomColor();\r",
									"var key = \"color\";\r",
									"var value = colorPair[0];\r",
									"pm.collectionVariables.set(key, value)\r",
									"key = \"bgColor\";\r",
									"value = colorPair[1];\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"function getRandomTitle() {\r",
									"  const titles = [\"☺\", \"Test_API-new\", \"К/р - 35.0\", \"コースワーク\", \"&#API#&\", \"Курсовая_работа_по_тестированию_АПИ_35.0\"];\r",
									"  return titles[Math.floor(Math.random() * titles.length)];\r",
									"}\r",
									"var value = getRandomTitle();\r",
									"var key = \"title\";\r",
									"pm.collectionVariables.set(key, value)\r",
									"\r",
									"function getRandomDescription() {\r",
									"  const descriptions = [\r",
									"   \"☺\", \r",
									"  \"Test_API-new\", \r",
									"  \"К/р - 35.0\",\r",
									"  \"コースワーク\", \r",
									"  \"&#API#&\", \r",
									"  \"www.skyeng.ru\",\r",
									"  \"*Маркдаун*\",\r",
									"  \"\",\r",
									"  \"1234567890\",\r",
									"  \"Есть такая легенда - о птице, что поёт лишь один раз за всю жизнь, но зато прекраснее всех на свете... Однажды она покидает свое гнездо и летит искать куст терновника и не успокоится, пока не найдёт... Среди колючих ветвей запевает она песню и бросается грудью на самый длинный, самый острый шип. И, возвышаясь над несказанной мукой, так поет, умирая, что этой ликующей песне позавидовали бы и жаворонок, и соловей... Единственная, несравненная песнь, и достаётся она ценою жизни... Но весь мир замер\"];\r",
									"  return descriptions[Math.floor(Math.random() * descriptions.length)];\r",
									"}\r",
									"var value = getRandomDescription();\r",
									"var key = \"description\";\r",
									"pm.collectionVariables.set(key, value)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"{{description}}\",\r\n    \"title\": \"{{title}}\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\",\r\n    \"id\": {{eventId}},\r\n    \"oldStartAt\": \"{{oldStartEvent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/updatePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"updatePersonal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Проверка переноса лс",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"    <table>\r",
									"        <tr>\r",
									"            <th>Начало</th>\r",
									"            <th>Цвет</th>\r",
									"            <th>Название</th>\r",
									"            <th>Описание</th>\r",
									"            <th>Id Л.с.</th>\r",
									"        </tr>\r",
									"        {{#each response.data.events}}\r",
									"            <tr>\r",
									"                <td>{{startAt}}</td>\r",
									"                <td>{{payload.payload.backgroundColor}}</td>\r",
									"                <td>{{payload.payload.title}}</td>\r",
									"                <td>{{payload.payload.description}}</td>\r",
									"                <td>{{payload.payload.parentId}}</td>\r",
									"            </tr>\r",
									"        {{/each}}\r",
									"    </table>\r",
									"`;\r",
									"pm.visualizer.set(template, {\r",
									"    response: pm.response.json()\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function format(inp) {\r",
									"    let f = inp.toISOString().slice(0, -5);\r",
									"    return f.toString() + '+00:00';\r",
									"}\r",
									"\r",
									"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
									"key = \"nexttime\"\r",
									"value = value.addMinutes(1)\r",
									"pm.collectionVariables.set(key, format(value))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Cookie",
								"value": "session_global={{Mytoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
							"protocol": "https",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"{{ver}}",
								"schedule",
								"removePersonal"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Негативные проверки",
			"item": [
				{
					"name": "Создание лс с пустым названием",
					"item": [
						{
							"name": "Создание лс с пустым названием",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Error: Value must be at least 1 character(s) long\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Value must be at least 1 character(s) long\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события с пустым названием\",\r\n    \"title\": \"\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс с названием из более 40 символов",
					"item": [
						{
							"name": "Создание лс с названием из более 40 символов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Error: Value must not exceed 40 character(s)\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Value must not exceed 40 character(s)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события с названием из более 40 символов\",\r\n    \"title\": \"oeccqpdmaaujwbecxmjretvqwubfbftxzwuyxihjyxhsuuofhj\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс без даты",
					"item": [
						{
							"name": "Создание лс без даты",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Error: Fail to check against [dateByPeriod] validation filter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Fail to check against [dateByPeriod] validation filter\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#F9EBFF\",\r\n    \"color\": \"#D478F1\",\r\n    \"description\": \"Создание личного события без даты\",\r\n    \"title\": \"Событие без даты\",\r\n    \"startAt\": \"19:30:00+03:00\",\r\n    \"endAt\": \"20:00:00+03:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс без времени",
					"item": [
						{
							"name": "Создание лс без времени",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Error: Fail to check against [dateByPeriod] validation filter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Fail to check against [dateByPeriod] validation filter\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#F9EBFF\",\r\n    \"color\": \"#D478F1\",\r\n    \"description\": \"Создание личного события без времени\",\r\n    \"title\": \"Событие вне времени\",\r\n    \"startAt\": \"2023-03-16\",\r\n    \"endAt\": \"2023-03-16\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс с неккоректной датой (29.02.2023)",
					"item": [
						{
							"name": "Создание лс с неккоректной датой (29.02.2023)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Error: Fail to check against [correctDateTimeInAtomFormat] validation filter\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Fail to check against [correctDateTimeInAtomFormat] validation filter\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"#F9EBFF\",\r\n    \"color\": \"#D478F1\",\r\n    \"description\": \"Создание личного события с неккоректной датой (29.02.2023)\",\r\n    \"title\": \"Событие от 29.02.2023\",\r\n    \"startAt\": \"2023-02-29T19:30:00+03:00\",\r\n    \"endAt\": \"2023-02-29T20:00:00+03:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс без цвета",
					"item": [
						{
							"name": "Создание лс без цвета",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Error: Invalid value pattern of color\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid value pattern\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"\",\r\n    \"color\": \"\",\r\n    \"description\": \"Создание личного события без цвета\",\r\n    \"title\": \"Бесцветное событие\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс с описанием из более 500 символов",
					"item": [
						{
							"name": "Создание лс с описанием из более 500 символов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Error: Value must not exceed 500 character(s)\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Value must not exceed 500 character(s)\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"xwvkgrxyagnfcthgfecbskrwapnuuvcpdqfvhroylvrulwjnasfehmsezfvrafspiibwwyknfsnfsdlayxderdaabfmazbzpbqnkabrhaxvrajgheooziexkxtqqjxcpsbfzcfdhhnefyulshldrxctiqpkwkefogqhcekrcwkqtizcpviiwdowxcdcqidzvfmpzsypvsjvrfylydcmdxbphvofuxqbakqcobnjqrhpvymouifooameadsmotqdxzblqkhguzrgxbgwjqyhpndxizwhwjayoytnjsoessddajjnzhvuzxlsrzdlfbhutkvqihxaerxlrferbppllwjaayprfjnymnciyymnxymhtqtbqhyjsdrsfikiaellngrzqhvbryycomkypcxiorhknocsucfyazbwyjjsyiakhadvggqfjnlwxuenbyqxrcqveghnwuykqfxxgstqkzrabhouhpvvvlfhbbkpbvzrmnemycmqrynyllhisxwszeinznqebpxmuvhhhlmtgabdazcsthvuneqxoke\",\r\n    \"title\": \"Более 500 символов в описании\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс с картинкой в описании",
					"item": [
						{
							"name": "Создание лс с картинкой в описании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var key = \"eventId\"\r",
											"var value = pm.response.json().data.payload.id\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"var key = \"start\"\r",
											"var value = pm.response.json().data.startAt\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"![текст](https://mirpozitiva.ru/wp-content/uploads/2019/11/1472042585_06.jpg)\",\r\n    \"title\": \"Картинка в описании\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка создания события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"    <table>\r",
											"        <tr>\r",
											"            <th>Id События</th>\r",
											"            <th>Начало</th>\r",
											"            <th>Сек.</th>\r",
											"            <th>Тип</th>\r",
											"            <th>Название</th>\r",
											"            <th>Id Л.с.</th>\r",
											"        </tr>\r",
											"        {{#each response.data.events}}\r",
											"            <tr>\r",
											"                <td>{{eventId}}</td>\r",
											"                <td>{{startAt}}</td>\r",
											"                <td>{{durationSeconds}}</td>\r",
											"                <td>{{type}}</td>\r",
											"                <td>{{payload.payload.title}}</td>\r",
											"                <td>{{payload.id}}</td>\r",
											"            </tr>\r",
											"        {{/each}}\r",
											"    </table>\r",
											"`;\r",
											"pm.visualizer.set(template, {\r",
											"    response: pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
											"key = \"nexttime\"\r",
											"value = value.addMinutes(1)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"removePersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс длительностью более  24 часов",
					"item": [
						{
							"name": "Создание лс длительностью 36 часов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var key = \"eventId\"\r",
											"var value = pm.response.json().data.payload.id\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"var key = \"start\"\r",
											"var value = pm.response.json().data.startAt\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addHours(36)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"Создание личного события длительностью 36 часов\",\r\n    \"title\": \"36 часов без перерыва\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка создания события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"    <table>\r",
											"        <tr>\r",
											"            <th>Id События</th>\r",
											"            <th>Начало</th>\r",
											"            <th>Сек.</th>\r",
											"            <th>Тип</th>\r",
											"            <th>Название</th>\r",
											"            <th>Id Л.с.</th>\r",
											"        </tr>\r",
											"        {{#each response.data.events}}\r",
											"            <tr>\r",
											"                <td>{{eventId}}</td>\r",
											"                <td>{{startAt}}</td>\r",
											"                <td>{{durationSeconds}}</td>\r",
											"                <td>{{type}}</td>\r",
											"                <td>{{payload.payload.title}}</td>\r",
											"                <td>{{payload.id}}</td>\r",
											"            </tr>\r",
											"        {{/each}}\r",
											"    </table>\r",
											"`;\r",
											"pm.visualizer.set(template, {\r",
											"    response: pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
											"key = \"nexttime\"\r",
											"value = value.addMinutes(1)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"removePersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Создание лс c недоступным в UI цветом",
					"item": [
						{
							"name": "Создание события красным цветом",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var key = \"eventId\"\r",
											"var value = pm.response.json().data.payload.id\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"var key = \"start\"\r",
											"var value = pm.response.json().data.startAt\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\":\"#FF0000\",\r\n    \"color\":\"#800000\",\r\n    \"description\": \"Создание события красного цвета\",\r\n    \"title\": \"Красная курсовая\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка создания события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"    <table>\r",
											"        <tr>\r",
											"            <th>Начало</th>\r",
											"            <th>Тип</th>\r",
											"            <th>Название</th>\r",
											"            <th>Цвет</th>\r",
											"            <th>Id Л.с.</th>\r",
											"        </tr>\r",
											"        {{#each response.data.events}}\r",
											"            <tr>\r",
											"                <td>{{startAt}}</td>\r",
											"                <td>{{type}}</td>\r",
											"                <td>{{payload.payload.title}}</td>\r",
											"                <td>{{payload.payload.backgroundColor}}</td>\r",
											"                <td>{{payload.id}}</td>\r",
											"            </tr>\r",
											"        {{/each}}\r",
											"    </table>\r",
											"`;\r",
											"pm.visualizer.set(template, {\r",
											"    response: pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
											"key = \"nexttime\"\r",
											"value = value.addMinutes(1)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"removePersonal"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Удаление несуществующего события",
					"item": [
						{
							"name": "Создание события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"pm.response.to.have.status(200);\r",
											" });\r",
											"\r",
											"var key = \"eventId\"\r",
											"var value = pm.response.json().data.payload.id\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"var key = \"start\"\r",
											"var value = pm.response.json().data.startAt\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"key = \"startEvent\"\r",
											"value = new Date()\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"key = \"end\"\r",
											"value = value.addMinutes(30)\r",
											"pm.collectionVariables.set(key, format(value))\r",
											"\r",
											"function getRandomColor() {\r",
											"  const colors = [\r",
											"      [\"#43B658\", \"#EBFDF2\"], \r",
											"      [\"#D478F1\", \"#F9EBFF\"], \r",
											"      [\"#FAC641\", \"#FFF7C7\"],\r",
											"      [\"#81888D\", \"#F4F5F6\"]\r",
											"  ];\r",
											"  return colors[Math.floor(Math.random() * colors.length)];\r",
											"}\r",
											"var colorPair = getRandomColor();\r",
											"var key = \"color\";\r",
											"var value = colorPair[0];\r",
											"pm.collectionVariables.set(key, value)\r",
											"key = \"bgColor\";\r",
											"value = colorPair[1];\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"function getRandomTitle() {\r",
											"  const titles = [\"☺\", \"Test_API-new\", \"К/р - 35.0\", \"コースワーク\", \"&#API#&\", \"Курсовая_работа_по_тестированию_АПИ_35.0\"];\r",
											"  return titles[Math.floor(Math.random() * titles.length)];\r",
											"}\r",
											"var value = getRandomTitle();\r",
											"var key = \"title\";\r",
											"pm.collectionVariables.set(key, value)\r",
											"\r",
											"function getRandomDescription() {\r",
											"  const descriptions = [\r",
											"   \"☺\", \r",
											"  \"Test_API-new\", \r",
											"  \"К/р - 35.0\",\r",
											"  \"コースワーク\", \r",
											"  \"&#API#&\", \r",
											"  \"www.skyeng.ru\",\r",
											"  \"*Маркдаун*\",\r",
											"  \"\",\r",
											"  \"1234567890\",\r",
											"  \"Есть такая легенда - о птице, что поёт лишь один раз за всю жизнь, но зато прекраснее всех на свете... Однажды она покидает свое гнездо и летит искать куст терновника и не успокоится, пока не найдёт... Среди колючих ветвей запевает она песню и бросается грудью на самый длинный, самый острый шип. И, возвышаясь над несказанной мукой, так поет, умирая, что этой ликующей песне позавидовали бы и жаворонок, и соловей... Единственная, несравненная песнь, и достаётся она ценою жизни... Но весь мир замер\"];\r",
											"  return descriptions[Math.floor(Math.random() * descriptions.length)];\r",
											"}\r",
											"var value = getRandomDescription();\r",
											"var key = \"description\";\r",
											"pm.collectionVariables.set(key, value)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"backgroundColor\": \"{{bgColor}}\",\r\n    \"color\": \"{{color}}\",\r\n    \"description\": \"{{description}}\",\r\n    \"title\": \"{{title}}\",\r\n    \"startAt\": \"{{startEvent}}\",\r\n    \"endAt\": \"{{end}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/createPersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"createPersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Проверка создания события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"    <table>\r",
											"        <tr>\r",
											"            <th>Id События</th>\r",
											"            <th>Начало</th>\r",
											"            <th>Сек.</th>\r",
											"            <th>Тип</th>\r",
											"            <th>Название</th>\r",
											"            <th>Id Л.с.</th>\r",
											"        </tr>\r",
											"        {{#each response.data.events}}\r",
											"            <tr>\r",
											"                <td>{{eventId}}</td>\r",
											"                <td>{{startAt}}</td>\r",
											"                <td>{{durationSeconds}}</td>\r",
											"                <td>{{type}}</td>\r",
											"                <td>{{payload.payload.title}}</td>\r",
											"                <td>{{payload.id}}</td>\r",
											"            </tr>\r",
											"        {{/each}}\r",
											"    </table>\r",
											"`;\r",
											"pm.visualizer.set(template, {\r",
											"    response: pm.response.json()\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function format(inp) {\r",
											"    let f = inp.toISOString().slice(0, -5);\r",
											"    return f.toString() + '+00:00';\r",
											"}\r",
											"\r",
											"var value = new Date(pm.collectionVariables.get(\"startEvent\"));\r",
											"key = \"nexttime\"\r",
											"value = value.addMinutes(1)\r",
											"pm.collectionVariables.set(key, format(value))"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"from\": \"{{startEvent}}\",\r\n    \"till\": \"{{nexttime}}\",\r\n    \"onlyTypes\":[\r\n       \"event\"\r\n   ],\r\n   \"statuses\": [\r\n       \"without_status\"\r\n       ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/events",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"removePersonal"
									]
								}
							},
							"response": []
						},
						{
							"name": "Повторное удаление события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Error: Personal event not found\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Personal event not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Cookie",
										"value": "session_global={{Mytoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": {{eventId}},\r\n    \"startAt\": \"{{start}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{baseUrl}}/{{ver}}/schedule/removePersonal",
									"protocol": "https",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"{{ver}}",
										"schedule",
										"removePersonal"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Mytoken",
			"value": "",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "ver",
			"value": "v2"
		},
		{
			"key": "startEvent",
			"value": ""
		},
		{
			"key": "end",
			"value": ""
		},
		{
			"key": "bgColor",
			"value": ""
		},
		{
			"key": "eventId",
			"value": ""
		},
		{
			"key": "start",
			"value": ""
		},
		{
			"key": "color",
			"value": ""
		},
		{
			"key": "title",
			"value": ""
		},
		{
			"key": "description",
			"value": ""
		},
		{
			"key": "eventId№1",
			"value": ""
		},
		{
			"key": "start№1",
			"value": ""
		},
		{
			"key": "oldStartEvent",
			"value": ""
		},
		{
			"key": "nexttime",
			"value": ""
		}
	]
}